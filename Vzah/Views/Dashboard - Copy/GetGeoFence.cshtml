@model ModelPortal.DashboardModel.DashboardConfigMap
@{
    Layout = null;
}

<style>
    .DivHeight {
    }
</style>

            <div class="ibox-title"> @Model.LST[0].TITLE</div>
            <div class="ibox-content">
                <div id="@(string.IsNullOrEmpty(Model.LST[0].Name) ? "" : Model.LST[0].Name)" class="map" style="height: 230px;" >
                    @if (Model.Markers == "[];" && Model.GEOFENCE == "[];")
                    {
                        <h1>No Data Available</h1>
                    }
                </div>
            </div>


<script>
       var markers = @Html.Raw(Model.Markers);
    var polygon = @Html.Raw(Model.GEOFENCE);
    $(document).ready(function () {
            debugger
            initMap();
    });

    var CustomMapStyles = [
    {
        "featureType": "all",
        "elementType": "labels.text.fill",
        "stylers": [
            {
                "saturation": 36
            },
            {
                "color": "#000000"
            },
            {
                "lightness": 40
            }
        ]
    },{
        "featureType": "water",
        "elementType": "geometry",
        "stylers": [
            {
                "color": "#6fa0e8"
            },
            {
                "lightness": 17
            }
        ]
    }
];




        var infoWindow;
            var map;
            function initMap() {
                map = new google.maps.Map(document.getElementById('@Model.LST[0].Name'), {
                    zoom:1,
                    center: new google.maps.LatLng(markers[0].lat, markers[0].lng),
                    //mapTypeId: 'terrain'
                    styles: CustomMapStyles
                });
                var infoWindow = new google.maps.InfoWindow();
                var latlngbounds = new google.maps.LatLngBounds();
                for (i = 0; i < markers.length; i++) {
                    var data = markers[i]
                    var myLatlng = new google.maps.LatLng(data.lat, data.lng);
                    //var icon = "";
                    //switch (data.color) {
                    //    case "Red":
                    //        icon = "red";
                    //        break;
                    //    case "Blue":
                    //        icon = "blue";
                    //        break;
                    //    case "Yellow":
                    //        icon = "yellow";
                    //        break;
                    //    case "Green":
                    //        icon = "green";
                    //        break;
                    //}
                    //icon ="http://maps.google.com/mapfiles/ms/icons/" + icon + ".png";
                    //var image = 'http://watest.kloudqapps.com/images/kranes.png';
                    var image="";
                    if (data.IMAGEPATH != "" && data.IMAGEPATH !=null) {
                       image = '@Model.ImagePath'+data.IMAGEPATH;

                    } else {
                       image = 'http://watest.kloudqapps.com/images/kranes.png';
                    }

                    var marker = new google.maps.Marker({
                        position: myLatlng,
                        map: map,
                        title: data.title,
                        animation: google.maps.Animation.BOUNCE,
                        icon: image

                    });
                    (function (marker, data) {
                        google.maps.event.addListener(marker, "click", function (e) {
                            infoWindow.setContent("<b>Euipment-</b>" + data.title + " - " + data.description + " ,<br>  <b>BU- </b>" + data.BUCODE + " ,<br>  <b>Company - </b>" + data.COMPANYCODE + " ,<br>  <b>Site - </b>" + data.SITECODE + " ,<br>  <b>Class - </b>" + data.CLASSCODE + " ,<br>  <b>Entry Date - </b>" + data.ENTRYDATE + " ,<br>  <b>RunHrs - </b>" + data.RUNHRS);
                            infoWindow.open(map, marker);
                        });
                        google.maps.event.addListener(marker, "dblclick", function (e) {
                            infoWindow.setContent("<b>Euipment-</b>" + data.title + " - " + data.description + " ,<br>  BU- " + data.BUCODE + " ,<br>  Company - " + data.COMPANYCODE + " ,<br>  Site - " + data.SITECODE + " ,<br>  Class - " + data.CLASSCODE + " ,<br>  Entry Date - " + data.ENTRYDATE + " ,<br>  RunHrs - " + data.RUNHRS);
                            infoWindow.open(map, marker);
                            window.location.href = "/Fleet/GetMachineSpecification?FLAG=0&MACHINEID=" + data.machineID + "&ISHOW=" + 1;
                        });
                    })(marker, data);
                    marker.setAnimation(4);
                }
                for (var j = 0; j < polygon.length; j++) {
                        debugger
                    var data = polygon[j]
                        var a = eval("[" + data.cords + "]");
                        //alert(a);
                    var bermudaTriangle = new google.maps.Polygon({
                        paths: [a],
                        //paths: [new google.maps.LatLng(22.128554,77.500067),new google.maps.LatLng(21.669845,77.060614),new google.maps.LatLng(21.434827,78.104315)],
                        strokeColor: '#FF0000',
                        strokeOpacity: 0.8,
                        strokeWeight: 3,
                        fillColor: '#FF0000',
                        fillOpacity: 0.35,
                        map: map
                    });
                }

            }

        function showArrays(event) {
            infoWindow = new google.maps.InfoWindow;
            // Since this polygon has only one path, we can call getPath() to return the
            // MVCArray of LatLngs.
            var vertices = this.getPath();

            var contentString = '<b>Bermuda Triangle polygon</b><br>' +
                'Clicked location: <br>' + event.latLng.lat() + ',' + event.latLng.lng() +
                '<br>';

            // Iterate over the vertices.
            for (var i = 0; i < vertices.getLength(); i++) {
                var xy = vertices.getAt(i);
                contentString += '<br>' + 'Coordinate ' + i + ':<br>' + xy.lat() + ',' +
                    xy.lng();
            }

            // Replace the info window's content and position.
            infoWindow.setContent(contentString);
            infoWindow.setPosition(event.latLng);

            infoWindow.open(map);
        }

</script>
@*<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?v=3&amp;key=@ViewBag.MapKey"></script>*@
